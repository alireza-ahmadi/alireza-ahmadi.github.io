---
interface Props {
  date: Date;
}

const { date } = Astro.props;

const datePublishedEpoch = date.getTime();
---

<recently-published
  class="px-1.5 font-medium text-crimson-800"
  data-date-publish={datePublishedEpoch}></recently-published>

<script>
  /**
   * Generate a label for the time difference between the given date and now.
   *
   * @param {number} date
   * @returns {string | null}
   */
  function generateLabel(epochDate: number) {
    if (Intl.RelativeTimeFormat === undefined) {
      return null;
    }

    const now = new Date();
    const diff = now.getTime() - epochDate;
    const seconds = Math.floor(diff / 1000);
    const minutes = Math.floor(seconds / 60);
    const hours = Math.floor(minutes / 60);
    const days = Math.floor(hours / 24);
    const weeks = Math.floor(days / 7);

    if (days < 7) {
      return new Intl.RelativeTimeFormat('en', { numeric: 'auto' }).format(
        -days,
        'day'
      );
    } else if (weeks <= 4) {
      return new Intl.RelativeTimeFormat('en', { numeric: 'auto' }).format(
        -weeks,
        'week'
      );
    }

    return null;
  }

  class RecentlyPublished extends HTMLElement {
    constructor() {
      super();

      const datePublish = this.dataset.datePublish;
      if (datePublish === undefined || datePublish === '') {
        return;
      }

      const date = parseInt(datePublish, 10);

      const label = generateLabel(date);
      if (label === null) {
        return;
      }

      this.innerText = label;
    }
  }

  customElements.define('recently-published', RecentlyPublished);
</script>
