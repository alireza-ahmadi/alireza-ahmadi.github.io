<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>بلاگ علیرضا احمدی</title>
    <link>https://alireza.es/index.xml</link>
    <description>Recent content on بلاگ علیرضا احمدی</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 27 Nov 2017 10:46:24 +0330</lastBuildDate>
    <atom:link href="https://alireza.es/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>تصمیم‌گیری براساس واقعیت‌ها و نه فرضیات</title>
      <link>https://alireza.es/post/conscious-decision-making/</link>
      <pubDate>Mon, 27 Nov 2017 10:46:24 +0330</pubDate>
      
      <guid>https://alireza.es/post/conscious-decision-making/</guid>
      <description>&lt;p&gt;چند ماه پیش، تصمیم گرفتیم که سیستم ارائه بازخورد در مورد کیفیت عملکرد هر پیک‌موتوری رو به سرویس &lt;a href=&#34;https://www.miare.ir/&#34;&gt;«میاره»&lt;/a&gt; اضافه کنیم، یه سیستم دریافت بازخورد معمولی که علاوه بر کمک‌کردن مستقیم به ما در راستای بهبود سرویس، بهمون اجازه می‌داد تا از طریق تاثیر دادن نتایج بازخورد‌ها بر روی امتیاز هر پیک و تاثیر دادن اون امتیاز در پروسه اعزام‌کردن(dispatching) به صورت غیرمستقیم هم پیک‌هایی که عملکرد مناسبی ندارن رو از سیستم حذف کنیم.&lt;/p&gt;

&lt;p&gt;توی سیستم طراحی‌شده قرار بود تا مشتری‌ها بتونن اعلام کنند که از پیک راضی بودند یا خیر. در پروسه‌ی طراحی سیستم، چندین ساعت وقت صرف تصمیم‌گیری در مورد جزییات مختلف و به طور خاص در مورد اینکه &lt;strong&gt;چطور کاری کنیم که مشتری‌ها از این سیستم صرفا برای ارائه بازخورد منفی استفاده نکنن&lt;/strong&gt; که بتونیم پیک‌هایی که عملکرد مثبتی دارن رو هم پیدا کنیم، فرض‌مون بر این بود که نزدیک به ۷۰ درصد بازخوردها در مواقعی که عدم رضایت وجود داره ثبت بشه و مشتری‌ها تو شرایطی که رضایت دارن به صورت کلی فیدبک  ثبت نکنن. با وجود ایده‌های مختلفی که مطرح شد، به خاطر یک‌سری ملاحظات تصمیم گرفتیم این قابلیت رو بدون اون امکانات ترغیب‌کننده منتشر کنیم و اون امکانات رو در طول زمان به سرویس اضافه کنیم.&lt;/p&gt;

&lt;p&gt;مدتی بعد، سیستم رو لانچ کردیم و بعد از در دسترس قرار گرفتن قابلیت به صورت کلی با نتیجه‌ی متفاوتی روبرو شدیم؛ اکثر بازخوردهای ثبت شده، &lt;strong&gt;چیزی بالای ۹۰ درصد در چند هزار بازخورد&lt;/strong&gt;، بازخوردهای مثبت بود و فقط تعداد محدودی از بازخوردها منفی بود. نتیجه رضایت مشتری‌ها رو از کیفیت محصول رو نشون می‌داد و این به خودی خود خوب بود ولی یه مشکلی توی پروسه وجود داشت، مشکل در بحث تصمیم‌گیری ما بود، نحوه‌ی رفتار افراد تقریبا برعکس چیزی بود که ما فکر می‌کردیم.
منشا این مشکل کجا بود؟ ما، برخلاف رویه‌ی معمول‌مون برای تصمیم‌گیری در حوزه‌های دیگه، بدون داشتن دیتای مورد نیاز و براساس مجموعه‌ای از تجریبات قبلی &lt;strong&gt;فرض&lt;/strong&gt; کرده بودیم که رفتار مشتری‌ها جور دیگه‌ای هستش در حالی که فرض ما مبنای دقیقی نداشت یا حداقل اطلاعاتی که داشتیم ناقص بود.&lt;/p&gt;

&lt;p&gt;تصور کنید ما به جای انتشار این قابلیت قبل بدون اون امکانات ترغیب‌کننده، تا پیاده‌سازی اون‌ها صبر می‌کردیم؛ احتمالا ساعت‌ها زمان باید صرف پیاده‌سازی اون قابلیت‌ها میشد و بعد از انتشار هم نه تنها کمکی به بهبود سرویس انجام نمی‌شد بلکه شاید به خاطر ترغیب بیش از حد افراد به ارائه بازخورد مثبت، داده‌ها غیرواقعی می‌شد و ارزش اولیه‌ی سرویس هم از بین می‌رفت.&lt;/p&gt;

&lt;p&gt;مشکلی که توضیحش رو دادم نمونه‌ای از تصمیم‌گیری براساس فرضیات به جای واقعیت‌ها بود، ساختاری برای تصمیم‌گیری که حداقل در دو سوم مواقعی که در این چند سال فعالیتم مورد استفاده قرار دادم منجر به شکست شده شده و تقریبا در اکثر مواقعی که برعکس عمل کردم، منجر به موفقیت شده.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;گروه قابل توجهی از مردم همه روزه این قبیل از تصمیمات رو می‌گیرن:&lt;/strong&gt; توی بورس سرمایه‌گذاری می‌کنن در حالی که هیچ شناختی از بازار سرمایه ندارن، در مورد بقیه قضاوت می‌کنن در حالی که اطلاعی از شرایط دیگران ندارن، مبالغ قابل توجهی رو صرف خرید وسایل می‌کنن بدون این که به طور کامل اون وسایل رو سنجیده باشن. تصمیماتی که بدون آگاهی و یا در نتیجه‌ی داشتن اطلاعات غلط بوده و در اغلب مواقع ناموفق هستند و در صورتی براساس دانش و اطلاع گرفته می‌شدن می‌تونستن منجر به نتیجه ی بهتری بشن.&lt;/p&gt;

&lt;p&gt;علی‌رغم اهمیت تصمیم‌گیری براساس واقعیت‌ها به جای فرضیات در زندگی روزمره، &lt;strong&gt;این روش تصمیم‌گیری به طور خاص تاثیرش رو در بحث کسب و کارها نشون میده&lt;/strong&gt;. در کسب و کارها، افرادی که مسئول تصمیم‌گیری در مورد مسائل هستند باید روزانه چندین تصمیم ریز و درشت بگیرن، تصمیماتی که باید در زمان اندک گرفته بشن ولی معمولا نتایج خودشون رو در دراز مدت و با ضریب بزرگی نشون خواهند داد، در واقع هزینه‌ی تصمیمات اشتباه در کسب و کارها تفاوت فوق‌العاده زیادی با زندگی روزمره داره و یک تصمیم اشتباه در یک کسب و کار، به خصوص کسب و کارهای نوپا، می‌تونه لطمات قابل توجهی رو به اون مجموعه وارد کنه. در پروسه‌ی این تصمیم‌گیری اگه بشه به هر نحوی، هر گروه از تصمیمات رو ساده‌‌تر کرد، میشه علاوه بر تصمیم‌گیری ساده‌تر در مورد اون گروه از تصمیمات، به منطقی‌تر بودن تصمیمات دیگه هم کمک کرد چون میشه تصمیمات باقی‌مونده رو با تمرکز و زمان بیشتری گرفت.&lt;/p&gt;

&lt;p&gt;یکی از ساده‌ترین راه‌حل‌ها برای ساده‌سازی و قابل اطمینان کردن تصمیمات، &lt;strong&gt;استفاده از داده‌ها&lt;/strong&gt; و اطلاعات موجوده. اطلاعاتی که رفتارهای کاربران، بازار یا بخش‌های دیگه‌ی دخیل در کسب و کار رو نشون میدن. برای به دست آوردن این داده‌ها راه‌حل‌هایی وجود داره که بنا به بازار، اهمیت تصمیم و نوع تاثیر تصمیم می‌تونن متفاوت باشن ولی در نهایت به سیستم برای تصمیم‌گیری منطقی‌تر کمک خواهند کرد.&lt;/p&gt;

&lt;p&gt;اطلاعات مورد نیاز برای تصمیم‌گیری می‌تونن به طرق مختلفی جمع‌آوری بشن، گاهی اوقات مسائل به حدی ساده و شبیه نمونه‌های دیگه هستند که تجربه‌ی افراد دیگه در اون حوزه می‌تونه در نقش اطلاعات جمع‌آوری شده عمل کنه؛ در برخی از موارد مسائل جزییات بیشتری داشته و نیاز به تحلیل داده‌های موجود در سیستم فعلی دارن و با قابل بهره‌برداری کردن داده‌های موجود میشه ریسک این قبیل از تصمیمات رو کاهش داد؛ گاهی اوقات مسائل پیچیده‌تر یا جدیدتر از اون هستند که بشه در مورد اونا براساس تجربیات تصمیم گرفت و در عین حال، داده‌ی قبلی‌ای هم برای تحلیل و استفاده در تصمیم‌گیری وجود نداره، در این قبیل از موارد شاید بهترین راه‌حل انجام طرح‌های آزمایشی و بررسی‌های میدانی باشه، آزمایشاتی که بتونه فرضیات افراد تصمیم‌گیرنده درکسب و کار رو به واقعیت نزدیک کنه.&lt;/p&gt;

&lt;p&gt;در صورتی که کسب و کارها برای تصمیم‌گیری به جای فرضیات به واقعیت‌ها تکیه کنن یا حداقل علاوه بر فرضیات، داده‌های واقعی رو هم تا حدی در سیستم دخیل کنن، خطای انسانی ناشی از فرضیات کاهش پیدا می‌کنه، تصمیم‌گیری‌ها ساده‌تر میشه و در دراز مدت احتمال موفقیت بیشتر میشه. به زبان ساده‌تر میشه کفت در صورتی که تصمیم‌گیری با این رویکرد صورت بگیره، هیجانات لحظه‌ای، نظرات بدون پایه و اساس و برداشت‌های اشتباه از پروسه تصمیم‌گیری حذف میشه و یا به حداقل می‌رسه و در نتیجه میشه انتظار نتایج بهتری رو داشت.&lt;/p&gt;

&lt;p&gt;با این وجود باید در نظر داشت که &lt;strong&gt;تکیه‌کردن به واقعیت‌ها و پرهیز از فرضیات تنها راه‌حلی برای کاهش ریسک‌ها و نه از بین بردن اون‌هاست&lt;/strong&gt; کما اینکه خیلی از اوقات تصمیم‌هایی که براساس واقعیت‌ها گرفته میشن منجر به شکست میشن.&lt;/p&gt;

&lt;p&gt;برای این که در تصمیم‌گیری براساس واقعیت‌ها هم ریسک به حداقل برسه، باید توجه داشت پیش از همه، داده‌ها به نحوی جمع‌آوری و &lt;strong&gt;ساده‌سازی&lt;/strong&gt; بشن که برای اکثر افراد دخیل در کسب و کار قابل استفاده بوده و بهره‌گیری از اون‌ها نیاز به مهارت عجیبی نداشته باشه. علاوه بر این باید توجه داشت که منابع جمع‌آوری اطلاعات صحیح باشن، به طور مثال در صورتی که اطلاعاتی در مورد بازار جمع‌آوری و در پروسه‌ی تصمیم‌گیری استفاده میشه باید از بخش صحیحی از بازار جمع‌آوری بشه و تا سر حد امکان تاثیر فاکتورهای زمانی و لحظه‌ای بر روی اون داده مورد توجه قرار داده بشه. فاکتور بعدی که مورد توجه قرار گرفتنش می‌تونه ریسک رو کاهش بده، توجه به تحت تاثیر قرار ندادن داده‌هاست، در واقع باید سعی بشه که داده‌ها تا سر حد امکان واقعی باشن و به طریقی، مثلا در آمارگیری مبتنی بر نرم‌افزارها در نتیجه‌ی وجود عامل خاصی در رابط کاربری نرم‌افزار یا در تحقیقات میدانی، در نتیجه‌ی برخورد خاص افرادی که تحقیقات رو انجام میدن داده‌ها تحت تاثیر قرار نگیرن. و آخرین و شاید مهم‌ترین فاکتور سعی‌کردن برای جمع‌آوری &lt;strong&gt;تمام&lt;/strong&gt; اطلاعات مورد نیازه، در صورتی که در پروسه جمع‌آوری اطلاعات بر روی بخشی از حوزه‌ی مورد بررسی تمرکز بیشتری صورت بگیره و از بخش‌های دیگه‌ی اون حوزه غفلت بشه داده‌های جمع‌آوری شده نه تنها به بهبود تصمیمات کمک نخواهند کرد بلکه امکان‌داره ضرر بیشتری از تصمیم‌گیری بر مبنای فرضیات به سیستم وارد کنن.&lt;/p&gt;

&lt;p&gt;موارد فوق در حالی که شاید به بدیهیات نزدیک باشن، در اکثر کسب و کارها مورد توجه قرار نمی‌گیرن؛ متاسفانه این عدم توجه بین کسب و کارهای ایرانی بسیار رایج‌تره و منجر به جلوگیری از رشد خیلی از کسب و کارهای جذاب میشه. با این وجود میشه با بررسی نحوه‌ی عملکرد کسب و کارهای برتر خارجی و حتی کسب و کارهای موفق داخلی به اهمیت تاثیر دادن داده‌ها و واقعیت‌ها در تصمیم‌گیری‌ها کمک کرد و با جای‌گزین کردن اون‌ها با فرضیات، ریسک‌های موجود رو کاهش داد تا نه‌تنها جلوی از بین رفتن کسب و کارها گرفته بشه بلکه به رشد اون‌ها هم کمک بشه.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>بررسی کتاب: تست مامان</title>
      <link>https://alireza.es/post/book-the-mom-test/</link>
      <pubDate>Sat, 12 Nov 2016 19:49:25 +0330</pubDate>
      
      <guid>https://alireza.es/post/book-the-mom-test/</guid>
      <description>&lt;p&gt;چند روز پیش توی توییتر تعدادی توییت مربوط به معرفی نسخه فارسی کتابی رو دیدم که قبلا بارها اسم نسخه انگلیسیش رو شنیده بودم ولی هیچ‌وقت همت نکرده بودم که
مطالعه‌اش کنم: کتاب تست مامان. با توجه به این که سال‌هاست اسم مدیر تیم ترجمه کتاب رو می‌شنوم و به نوعی بهش اعتماد دارم لینک موجود توی یکی از توییت‌ها رو باز
کردم و یه نگاهی به &lt;a href=&#34;http://www.pingon.io/books/mom-test/fa&#34;&gt;لندینگ‌پیج&lt;/a&gt; کتاب انداختم. توی لندینگ پیج توضیحات خوبی از کتاب به همراه یک فصل از کتاب
به عنوان نمونه اومده بود، اونروز چند دقیقه‌ای روی توی اون صفحه گذروندم ولی در نهایت به خاطر این که &lt;strong&gt;تجربه‌های بدی از ترجمه کتاب‌های انگلیسی داشتم&lt;/strong&gt; نتونستم
خودم رو برای خریدن کتاب راضی کنم چون تقریبا به جز یکی دو مورد خاص از خریدن نسخه فارسی کتاب‌ها پشیمون شدم و رفتم سراغ نسخه انگلیسیش.&lt;/p&gt;

&lt;p&gt;این قضیه گذشت تا این که مجددا امروز، &lt;a href=&#34;https://twitter.com/pingonio/status/796609510404227072&#34;&gt;ویدئویی&lt;/a&gt; از نویسنده کتاب دیدم که در مورد ترجمه
نسخه فارسی کتاب صحبت می‌کرد و بعدش هم به طور کلی کتاب رو معرفی کرد، توضیحات &lt;strong&gt;راب فیتزپاتریک(نویسنده کتاب که خودش یک کارآفرین حوزه تکنولوژیه)&lt;/strong&gt; به حدی برام جالب بود که تصمیم گرفتم
برم لااقل نسخه انگلیسی کتاب رو دانلود کنم و یه بار مطالعه کنم ولی قبل از شروع مطالعه کتاب به خودم گفتم که چرا نسخه فارسی رو امتحان نکنم؟&lt;/p&gt;

&lt;p&gt;توی ۵ دقیقه بعدی من &lt;strong&gt;ترجمه فارسی&lt;/strong&gt; کتاب رو خریده بودم و توی ۲ یا ۲ ساعت و نیم بعدی داشتم آخرین صفحه‌‌های کتاب رو می‌خوندم! به جرات می‌تونم بگم
از معدود دفعاتی بود که داشتم یه کتاب ترجمه‌شده رو می‌خوندم و از خوندنش لذت می‌بردم، کتاب فوق‌العاده روون و با معدود اشتباهات نگارشی و املایی ترجمه شده بود
و جای هیچ‌گونه اعتراضی رو باقی نمی‌گذاشت.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://alireza.es/images/book-the-mom-test-cover.png&#34; alt=&#34;کتاب تست مامان&#34; /&gt;&lt;/p&gt;

&lt;p&gt;من آدم درون‌گرایی(شاید حتی جامعه‌گریز) هستم و حرف زدن با دیگران نه تنها برام خوش‌آیند نیست بلکه بعضی اوقات آزاردهنده هم هست در نتیجه توی این چند سالی که مشغول کارکردن هستم، برقراری ارتباط با بقیه همیشه بزرگ‌ترین معضلم بوده.
این مسئله تو حالت عادی، وقتی یه موقعیت کارمندی دارید یا تعداد افرادی که باهاشون در ارتباط هستید محدوده مشکل خاصی نیست چون در اثر تجربه می‌تونید یاد بگیرید
که چطور با مسئله کنار بیاین، کما اینکه من با این مسئله کنار اومدم ولی مشکل زمانی به وجود می‌آد که قصد دارید محصولی رو برای عموم تعریف کنید، محصولی که قراره مشتری‌هایی
داشته باشه که شاید هیچ‌وقت اون‌ها رو نبینید.&lt;/p&gt;

&lt;p&gt;این مشکل عینا برای من توی مجموعه‌ای که با دوستانم راه‌اندازی کرده بودیم به وجود اومد، اوایل کار تونستیم چند تا ایده رو عملیاتی کنیم و بازخورد خوبی هم از مشتری‌ها دریافت کنیم ولی بعد
مدتی، پیداکردن محصولی که بخوایم برای مشتری تولید کنیم به یک معضل تولید شد و این مسئله به حدی جلو رفت که باعث قطع شراکت من با شرکام(که دوستان قدیمیم هم بودن) شد.
ولی مشکل چی بود؟&lt;/p&gt;

&lt;p&gt;مشکل اساسی عدم شناخت ما از جامعه، کسب و کارها و نیازهاشون بود، افرادی که کار فنی می‌کنن همیشه جواب حجم قابل توجهی از سوالات‌شون رو توی اینترنت پیدا می‌کنن
ولی کسب شناخت چیزی نیست که بشه از طریق اینترنت به دست آورد، اصلی‌ترین روش شناخت افراد برقرار کردن ارتباط با اون‌هاست. در صورتی که بتونید با افراد ارتباط برقرار کنید
علاوه بر این که می‌تونید ایده‌های خودتون رو اعتبارسنجی کنید شانس این رو دارید که از نیازهای اون‌ها ایده‌های جدیدی استخراج کنید. خب، برای اعتبارسنجی ایده‌ها و یا رسیدن
به ایده‌های جدید باید نیازهای افراد یا کسب و کارها رو کشف کنیم و اولویت اون رو بفهمیم، این مسئله که کاملا واضحه چرا وقتمون رو برای خوندن یه کتاب تو این زمینه صرف کنیم؟&lt;/p&gt;

&lt;p&gt;این بخش از کار دقیقا بخشیه که افراد بزرگ‌ترین اشتباهات رو می‌کنن، اکثر افراد(من‌جمله من و دوستام) می‌دونن که باید محصول رو با نیازهای مردم سنجید پس چرا این حجم از ایده‌های غیرکاربردی به عنوان محصول وارد بازار میشه؟
نحوه سنجش چیزیه که تفاوت اساسی رو در این مرحله ایجاد می‌کنه. کتاب تست مامان به طور کلی سعی می‌کنه به شما توضیح بده که &lt;strong&gt;چطور با مشتری‌های احتمالی در مورد ایده یا محصول‌تون صحبت کنید&lt;/strong&gt;، &lt;strong&gt;چطور نیازهای واقعی
اون‌ها رو کشف کنید&lt;/strong&gt;  و &lt;strong&gt;چطور به جای شنیدن جواب‌هایی از روی ترحم، نتیجه منطقی از گفتگو با افراد به دست بیارید&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;این کتاب با یه بحث ساده شروع میشه، &lt;strong&gt;اگه برید ایده‌ای که دارید رو با مادرتون مطرح کنید چه بازخوردی بهش نشون میده؟&lt;/strong&gt; در اغلب موارد مادرتون به دلایل مختلف، سعی می‌کنه
حتی در صورتی که ایده شما براش جذاب نباشه ازش تعریف کنه، خودش رو طوری نشون بده که انگار ترغیب شده و شما پیش خودتون فکر کنید که ایده‌تون بهترین ایده دنیاست. توی کتاب
سعی می‌کنه به شما توضیح بده که به جای این مستقیما که نظر مادرتون، یا به طور کلی‌تر مشتری، رو مورد ایده‌تون بپرسید، چطور باهاش صحبت کنید تا غیر مستقیم بفهمید که ایده‌تون براش جالب هست
یا خیر.&lt;/p&gt;

&lt;p&gt;در طول کتاب(که خیلی زیاد هم نیست) سعی میشه تا شما از نحوه درست سوال پرسیدن، نحوه تشخیص مشتریان احتمالی و تقسیم بندی مشتریان تا نحوه صحیح جمع‌آوری بازخوردها، تحلیل اون‌ها و انتخاب ایده و مشتری‌ها رو یاد بگیرید.
کتاب حجم قابل توجهی از مثال‌های عینی رو در بر گرفته که باعث میشه مفاهیمی که کتاب مطرح می‌کنه به سادگی قابل درک باشن و شبهه یا پیچیدگی وجود نداشته باشه در عین
حال سعی شده تا از ذکر کردن جزییات بی‌فایده پرهیز بشه و کتاب تا حد قابل توجهی فاقد بخش‌های زائد باشه. در حقیقت کتاب بیشتر از یه منبع برای یادگیری تئوری نحوه ارتباط با مشتریان
یه &lt;strong&gt;نمونه عملیاتی&lt;/strong&gt; از تجارب لازم برای برقراری ارتباط با مشتریانه، تجاربی که به شما در راستای شناخت مشتری، تحلیل نیازها و اعتبار سنجی ایده‌هاتون کمک می‌کنه.&lt;/p&gt;

&lt;p&gt;در مجموع توصیه می‌کنم اگه قصد راه‌اندازی کسب و کاری رو دارید یا توی موقعیت شغلی فعلی‌تون به ارتباط با مشتریان نیاز دارید &lt;a href=&#34;http://www.pingon.io/books/mom-test/fa&#34;&gt;این ترجمه عالی کتاب رو بخرید&lt;/a&gt; و یا حداقل فصل اولش رو به طور رایگان دریافت و مطالعه کنید. قبل از پایان مطلب پیشنهاد می‌کنم چند بخش از کتاب رو
که برای من جالب بود در ادامه ببینید:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;‌ شما اجازه ندارین به مشتری‌هاتون بگین مشکلات‌شون چیه و از طرف دیگه، اونا هم اجازه ندارن به شما بگن که چی بسازین. مشکل برای اوناست و راه‌حل برای شما.&lt;/p&gt;

&lt;p&gt;گفت و گوهای کوتاه و صمیمی، راه بهتری برای به‌دست آوردن اطلاعات در مورد مشتری و نیازهای اونه. نیازی به جلسه‌های رسمی و طولانی نیست.&lt;/p&gt;

&lt;p&gt;تست‌مامان یه سری قانون ساده، برای طراحی سوال‌های مناسب و خوبه. سوال‌هایی که تو جوابشون مامانا هم نتونن بهمون دروغ بگن، چه برسه به مشتری‌ها.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;و در نهایت این پاراگراف دقیقا نشون میده که کتاب چقدر با دیدگاه عملیاتی(و نه تئوری) نوشته شده:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;اگه دیدن که خوب نیست موقع صحبت‌کردن، کاغذ به همراه داشته باشین، بذارید مکالمه‌تون تموم بشه بعدش سریع برین یه گوشه‌ای و صحبت‌ها رو یادداشت کنین. من از این روش توی کنفرانس‌ها استفاده می‌کنم.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&#34;related-links&#34;&gt;
	&lt;h6&gt;پیوندهای بیرونی مرتبط&lt;/h6&gt;
	&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://manili.org/?p=542&#34;&gt;نقدی بر کتاب “تست مامان”&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://ifattahi.ir/books/book/%D8%AA%D8%B3%D8%AA-%D9%85%D8%A7%D9%85%D8%A7%D9%86/&#34;&gt;تست مامان&lt;/a&gt; در قفسه کتاب&lt;/li&gt;
&lt;/ul&gt;

&lt;/div&gt;

</description>
    </item>
    
    <item>
      <title>اصول Logging  در پروژه‌های نرم‌افزاری</title>
      <link>https://alireza.es/post/logging-best-practices/</link>
      <pubDate>Mon, 21 Mar 2016 19:53:55 +0430</pubDate>
      
      <guid>https://alireza.es/post/logging-best-practices/</guid>
      <description>

&lt;p&gt;تقریبا اکثر توسعه‌دهندگان بر روی این که Logging یکی از مهم‌ترین ابزارهای یک توسعه‌دهنده در پروژه‌های نرم‌افزاری است اتفاق نظر دارند ولی متاسفانه خیلی از توسعه‌دهندگان به خوبی از این ابزار ساده ولی قدرتمندی که در اختیار دارند استفاده نمی‌کنند. در حقیقت لاگ‌ها نحوه ارتباط توسعه‌دهنده با سرویسی هستند که طراحی می‌کنه پس یک استراتژی Logging مناسب می‌تونه توسعه نرم‌افزار شما رو سریع‌تر کنه، به پیدا کردن سریع‌تر باگ‌ها در لول پروداکشن کمک کنه و نگه‌داری محصول رو براتون ساده کنه. من سعی کردم برخی اصولی که خودم به طور معمول رعایت می‌کنم (و یا مهم هستند و من از روی تنبلی رعایت نمی‌کنم :)) رو در ادامه مطلب بیارم. اصول و تکنیک‌هایی که در ادامه نوشته شده‌اند به صورت کلی در پروژه‌های نرم‌افزاری در پلتفرم‌های مختلف قابل استفاده هستند ولی تمرکز اصلی مطلب بر روی پروژه‌های بک اند وب است.&lt;/p&gt;

&lt;h2 id=&#34;خودتون-رو-به-logger-های-پیش-فرض-پلتفرم-محدود-نکنید&#34;&gt;خودتون رو به Logger های پیش‌فرض پلتفرم محدود نکنید&lt;/h2&gt;

&lt;p&gt;تقریبا اکثر پلتفرم‌ها و زبان‌های برنامه‌نویسی یک کلاس، تابع، پکیج و یا ابزار مشابهی برای چاپ کردن  در اختیار توسعه‌دهندگان می‌گذارند، به چند تا مثال تو زبون‌های مختلف توجه کنید&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;console.log(&#39;Hello World!&#39;); // Javascript
print &#39;Hello World!&#39; # Python
fmt.Print(&#39;Hello World!&#39;) // Go
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;با وجود این که استفاده از ابزارهای پیش‌فرض زبان می‌تونه تا حدی مشکل رو حل کنه ولی باعث میشه دست شما بسته بشه. پیشنهاد می‌کنم برای لاگ‌کردن رویدادها و دیباگینگ از یک لاگر سفارشی استفاده کنید، لاگرهای سفارشی به شما امکان لاگ کردن در درجات مختلف(خطاها، هشدارها، پیغام‌های مخصوص دیباگینگ و &amp;hellip;)، تعیین خروجی‌های مختلف(فایل، سرور لاگینگ، کنسول و &amp;hellip;)، تعیین فرمت خروجی(متن ساده، json و &amp;hellip;) و در مجموع کنترل کامل‌تر بر روی خروجی رو می‌دهند. من از &lt;code&gt;winston&lt;/code&gt; در نود، &lt;code&gt;logrus&lt;/code&gt; در گو و  پکیج استاندارد &lt;code&gt;logging&lt;/code&gt; در پایتون برای لاگ کردن استفاده می‌کنم.&lt;/p&gt;

&lt;h2 id=&#34;در-چند-درجه-مختلف-لاگ-کنید&#34;&gt;در چند درجه مختلف لاگ کنید&lt;/h2&gt;

&lt;p&gt;موارد زیادی در یک اپلیکیشن هستند که می‌توانند لاگ شوند با این وجود برخی از موارد صرفا در پروسه توسعه کاربرد دارند در حالی که برخی موارد هم در پروسه توسعه و هم در هنگامی که محصول در لول پروداکشن مشغول به کار است با اهمیت هستند(به طور مثال فقط خطاها و هشدارها)، در صورتی که از یک لاگر سفارشی استفاده کرده باشید می تونید به راحتی خروجی‌های سیستم را در چند درجه مختلف دسته‌بندی کنید و در در محیط‌های مختلف، فقط خروجی‌های مورد نیاز را تولید کنید، این استراتژی از افزایش بی‌دلیل حجم خروجی‌های شما به‌خصوص در لول پروداکشن کمک فوق‌العاده‌ای می‌کنه و دیباگینگ رو ساده‌تر خواهد کرد. در یک نرم‌افزار که به درستی طراحی شده باشه، درجه لاگ‌کردن در هنگام راه‌اندازی نرم‌افزار قابل تنظیمه(در داخل کد هارد کد نشده است) و حتی پس از راه‌اندازی نرم‌افزار نیز به صورت داینامیک قابل تغییر است تا در هنگام برخورد با مشکلات احتمالی در لول پروداکشن بتوان بدون از لحظه‌ای از دسترس خارج کردن سیستم، جزییات بیشتری از مشکل پیش اومده رو مشاهده کرد و راحت‌تر منشا اون رو پیدا کرد.&lt;/p&gt;

&lt;h2 id=&#34;در-لاگ-کردن-افراط-و-تفریط-نکنید&#34;&gt;در لاگ‌کردن افراط و تفریط نکنید&lt;/h2&gt;

&lt;p&gt;مثل تمام بخش‌های دیگه زندگی، افراط و تفریط در لاگ کردن هم می‌تونه باعث ایجاد مشکل در کارها بشه. سعی کنید اکثر رویدادهای مهم سیستم که موفقیت‌آمیز بودن یا نبودنشون می‌تونه باعث ایجاد تغییر در رویه کاری سیستم بشه رو لاگ کنید. برقرار شدن ارتباط با دیتابیس، راه‌اندازی موفق سرور، موفقیت‌آمیز بودن کوئری‌های ارسالی برای دیتابیس و امثالهم از مواردی هستند که می‌بایست لاگ شوند با این وجود مشخصا اختصاص دادن مقدار یه یک متغیر نیازی به لاگ کردن ندارد، قبل از لاگ‌کردن یک مورد برای چند مسئله به این فکر کنید که آیا واقعا می‌شود درآینده از دیتای خروجی این مورد استفاده شود و یا دیتای خروجی صرفا موجب شلوغ شدن خروجی لاگ‌ها می‌شود؟&lt;/p&gt;

&lt;p&gt;بدیهی است که لاگ‌کردن در درجات مختلف می‌تونه تا حد قابل‌قبولی به این مورد هم کمک کنه.&lt;/p&gt;

&lt;h2 id=&#34;اطلاعاتی-که-مورد-نیاز-است-رو-لاگ-کنید-نه-کمتر-و-نه-بیشتر&#34;&gt;اطلاعاتی که مورد نیاز است رو لاگ کنید، نه کمتر و نه بیشتر&lt;/h2&gt;

&lt;p&gt;لاگ‌ها باید علاوه بر ذکرکردن وقوع یک رویداد، اطلاعات مربوط به اون رویداد رو همراه خود داشته باشند. پیام‌های زیر رو مقایسه کنید:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[1] order
[2] Order creation failed
[3] Order creation failed. price=۲۱۴۰۰ userId=oQYZQxCAKN8J
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;درباره حالت ۱ که توضیحی ندارم و به نظرم کاملا مردوده :)‌ ولی در مورد حالات دیگه در صورتی که اطلاعات مربوط به رویداد رو ذکر نکرده باشید(حالت ۲)، احتمالا هیچ وقت نخواهید فهمید که عدم موفقیت‌آمیز بودن ایجاد سفارش مربوط به فارسی بودن اعداد قیمت سفارش است ولی در حالت ۳ به راحتی علت بروز مشکل قابل پیگیری است. سعی کنید ماکسیمم اطلاعاتی که به دیباگینگ کمک می‌کنند رو ذکر کنید، &lt;strong&gt;آیدی‌ها&lt;/strong&gt; و &lt;strong&gt;داده‌هایی که نیاز به اعتبارسنجی دارند&lt;/strong&gt; در بالاترین درجه اهمیت هستند. هم‌چنین داده‌های بیش از حد و از لاگ کردن مواردی که ذکر شدن یا نشدنشون تغییری در پروسه ایجاد نمی‌کنه پرهیز کنید به طور مثال لازم نیست تا رویدادی تکراری که در یک حلقه انجام می‌شود را به ازای هر بار انجام لاگ کنید، کافیست عملیات انجام شده به همراه تعداد دفعات انجام حلقه را لاگ کنید. در نهایت از لاگ کردن دیتاهای امنیتی مثل پسوردها، توکن‌ها و امثالهم هم اکیدا بپرهیزید.&lt;/p&gt;

&lt;h2 id=&#34;لاگ-ها-باید-توسط-انسان-و-ماشین-قابل-خواندن-باشند&#34;&gt;لاگ‌ها باید توسط انسان و ماشین قابل خواندن باشند&lt;/h2&gt;

&lt;p&gt;لاگ‌های خروجی سیستم می‌بایست بدون parse کردن برای انسان‌ها قابل خواندن باشند در غیر این صورت مهم‌ترین قابلیت خود رو از دست می‌دهند، علاوه بر این باید توسط ماشین هم قابل خواندن باشند تا بتوان اون‌ها رو ساده تر تحلیل کرد پس سعی کنید پیام‌هاتون ساده باشه، یک رویداد در چند خط متفاوت لاگ نشه، ترجیحا هیچ‌گونه سریالیزیشنی حتی تبدیل به json ساده بر روشون انجام نشه(البته این مورد در شرایط خاص قابل چشم‌پوشی است) و مهم‌تر از همه متن ساده باشند و به هیچ عنوان به یک فرمت باینری تبدیل نشوند تا انسان بتواند به راحتی آن‌ها رو بخواند. در عین حال برای این که ماشین هم توانایی خواندن سریع داده‌ها رو داشته باشه باید تمام پیام‌های تولیدی توسط یک سیستم از یک فرمت مشخص و البته قابل parse کردن پیروی کنند. پیشنهاد می‌کنم پیام‌هاتون شامل درجه لاگ، زمان تولید، یک متن پیام نوشته شده توسط خودتون(یک جمله واقعی و واضح، نه صرفا یک کلمه کلیدی) به همراه تعدادی جفت key/value  شامل دیتاهای مربوط به رویداد باشه با چنین ساختاری:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;time=&amp;quot;2015-12-01T01:27:38+3:30&amp;quot; level=debug msg=&amp;quot;Something useful&amp;quot; key1=value1 foo=bar
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt; 
و یا&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[debug][2015-12-01T01:27:38+3:30][Something useful][(key1:value1)(foo:bar)]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;در مواردی که سیستم و یا لایبرری مورد استفاده‌تون پیغام خطایی تولید کرده، اون رو به عنوان یکی از جفت key/value ها چاپ کنید. چنین ساختاری علاوه بر این که خوانایی مناسبی برای انسان داره می‌تونه به راحتی توسط ماشین parse بشه و در عین حال میشه به راحتی بر روی داده‌ها کوئری زد. لطفا به این توجه کنید که زمان لاگ‌شدن اهمیت بالایی و کاربردهای مختلفی داره و به هیچ عنوان نباید در هنگام لاگ کردن فراموش بشه، هم‌چنین بهتره زمان در پیام‌ها با فرمتی لاگ بشه که تاریخ و ساعت رو به همراه منطقه زمانی به طور کامل داشته باشه و استفاده از تاریخ و یا ساعت و یا عدم چاپ کردن منطقه زمانی به هیچ‌عنوان توصیه نمیشه. (استفاده از Unix Timestamp هم به دلیل ناخوانایی برای انسان توصیه نمیشه)&lt;/p&gt;

&lt;h2 id=&#34;خروجی-لاگ-ها-رو-به-مقصد-مناسب-هدایت-کنید&#34;&gt;خروجی لاگ‌ها رو به مقصد مناسب هدایت کنید&lt;/h2&gt;

&lt;p&gt;لاگ‌کردن داده‌ها می تونه مقصدهای مختلفی داشته باشه، شما می‌تونید توی کنسول سیستم لاگ کنید، از یک فایل استفاده کنید، داده‌هاتون رو به یک سرویس ‌HTTP بفرستید، توی دیتابیس ذخیره کنید و یا از خیلی از روش‌های دیگه استفاده کنید. هر کدوم از مقصدهایی که ذکر شد مزایا و معایب مختص خودشون رو دارند و استفاده از هرکدوم از روش‌ها می‌تونه با در نظر گرفتن شرایط پروژه توجیه‌پذیر باشه.&lt;/p&gt;

&lt;p&gt;پیشنهاد من اینه که تا سر حد امکان روی کنسول سیستم لاگ نکنید. از مقصدهای HTTP بپرهیزید(به خصوص اگه شرایط شبکه‌تون حتی در لول پروداکشن استیبل نیست، مثلا توی یک دیتاسنتر ایرانی مستقر هستید) و لاگ‌کردن توی دیتابیس رو هم فراموش کنید چون با وجود این که به شما امکانات خوبی برای تحلیل داده‌ها میده ولی باعث ایجاد تاخیر در عملکرد نرم‌افزار میشه(به خصوص در پلتفرم‌هایی که از کانکارنسی به طور مناسب پشتیبانی نمی‌کنند). سعی کنید پیام‌ها رو روی فایل لاگ کنید، فایل‌ها برخلاف مقصدهای تحت شبکه بلاک نمی‌شوند، نوشتن بر روی آن‌ها فوق‌العاده کم‌هزینه و سریعه و کمترین تاثیر رو بر روی عملکرد سیستم دارند. علاوه بر این برای تحلیل اون‌ها هم گزینه‌های مختلفی در اختیار دارید، می‌تونید از یک ادیتور ساده متنی استفاده کنید، از &lt;code&gt;grep&lt;/code&gt; برای سرچ کردن توشون استفاده کنید و یا با راه‌اندازی یک نود Logstash، خروجی‌ها رو از منابع مختلف جمع‌آوری کنید و به راحتی و با حداقل تاثیر بر روی پرفورمنس سیستم روشون کوئری‌های پیچیده بزنید.&lt;/p&gt;

&lt;h2 id=&#34;لاگ-ها-تنها-روش-گرفتن-خروجی-از-سیستم-شما-نیستند&#34;&gt;لاگ‌ها تنها روش گرفتن خروجی از سیستم شما نیستند&lt;/h2&gt;

&lt;p&gt;در نظر داشته باشید که لاگ‌ها با وجود این که کمک شایانی به شما در پروسعه توسعه می‌کنند تنها ابزار شما نیستند و باید برخی اوقات منابع دیگه‌ای برای تحیل سرویس‌تونه داشته باشید. مثلا سعی کنید ارورها سیستم و اکسپشن‌های ایجاد شده در سیستم رو بر روی یک سرویس بیرونی که شما رو از به وجود اومدن اون‌ها مطلع می‌کنه هدایت کنید، &lt;a href=&#34;https://getsentry.com&#34;&gt;Sentry&lt;/a&gt; برای وب‌سرویس‌ها و &lt;a href=&#34;https://fabric.io/kits/crashlytics&#34;&gt;Crashlytics&lt;/a&gt; بر موبایل‌اپ‌ها گزینه‌های پیشنهادی من برای ارور هندلینگ هستند، اکثر لاگرهای سفارشی را می‌توان طوری تنظیم کرد که لاگ‌های مربوط به یک درجه خاص(مثل خطاها) را علاوه بر لاگ‌کردن در فایل به مقصد‌های دیگه هم ارسال کنند. هم‌چنین به طور مثال می‌توان برخی داده‌های عددی که تحلیل‌شون ساده‌تره رو مثل تعداد ریکوئست‌ها، تعداد ریکوئست‌های ناموفق، زمان مورد نیاز برای انجام کوئری‌ها و &amp;hellip;  به سرویس‌های جمع‌اوری متریکز مثل Graphite ارسال کرد و تحلیل اون‌ها رو چندین مرتبه ساده‌تر کرد. پس فکر نکنید لاگ‌کردن تنها راه ارتباط شما با سرویسی هستش که طراحی کردید.&lt;/p&gt;

&lt;h2 id=&#34;یک-استراتژی-مناسب-برای-آرشیو-کردن-لاگ-هاتون-داشته-باشید&#34;&gt;یک استراتژی مناسب برای آرشیو کردن لاگ‌هاتون داشته باشید&lt;/h2&gt;

&lt;p&gt;به هر میزانی که حرفه‌ای عمل کنید و فقط موارد مورد نیازتون رو لاگ کنید، با توسعه سیستم و گذر زمان به مرحله‌ای می‌رسید که حجم فایل‌های لاگ‌هاتون به طرز قابل توجهی رشد می‌کنه و حجم زیادی از فایل مربوط خواهد بود به دیتاهایی که مدت‌ها پیش تولید شدند و شما نیازی به استفاده ازشون ندارید. راه‌حل ساده در برخورد با این مشکل پاک‌کردن لاگ‌هاست :) شاید بعد یک سال از تولید یک پیام، دیگه نیازی به اون پیام نباشه ولی پاک کردن لاگ سیستم مربوط به یک ماه پیش یک اشتباه واقعیه، در نتیجه سعی کنید یک راهکار مناسب برای آرشیو کردن لاگ‌هاتون داشته باشید، مثلا پیشنهاد می‌کنم تا  در بازه‌های زمانی مشخص لاگ‌هاتون فشرده‌سازی کنید و فایل‌های اصلی رو حذف کنید.(سرویس‌هایی هستند که این مراحل رو به طور خودکار براتون انجام میدن، هم‌چنین اگه فرمت لاگ‌تون منطقی طراحی شده باشه و زمان هم درش در نظر گرفته شده باشه، خودتون هم می‌تونید به راحتی یه ابزار ساده برای انجام این عملیات بنویسید) فقط توجه داشته باشید که بازه زمانی مربوط به این عملیات باید به نحوی انتخاب بشه که عملا لاگ‌های شما رو غیر قابل استفاده نکنه.&lt;/p&gt;

&lt;p&gt;امیدوارم مواردی که توضیح دادم به پروسه توسعه نرم‌افزارهاتون کمک کنه. خوش‌حال میشم اگه مورد دیگه‌ای به ذهن‌تون رسید از طریق &lt;a href=&#34;https://twitter.com/alireza94&#34;&gt;توییتر&lt;/a&gt; برام ارسال کنید تا به این لیست اضافه کنم. سال نو هم مبارک باشه :)&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>روش پیشنهادی من برای یادگیری برنامه‌نویسی اندروید</title>
      <link>https://alireza.es/post/learn-android-programming/</link>
      <pubDate>Mon, 01 Sep 2014 14:32:00 +0430</pubDate>
      
      <guid>https://alireza.es/post/learn-android-programming/</guid>
      <description>&lt;div class=&#34;highlight-box highlight-box-red&#34;&gt;
	&lt;h6&gt;گذر زمان ...&lt;/h6&gt;
	&lt;p&gt;با توجه به گذشتن مدت زمان نسبتا زیادی از نگارش این مطلب، علی‌رغم مفید بودن بخش قابل توجهی از موارد ذکر شده، در حال حاضر این مطلب به عنوان روش پیشنهادی من برای
یادگیری اندروید توصیه نمی‌شود. پیشنهاد می‌کنم تا پیش از بروزرسانی این مطلب، از منابع جدیدتر مثل &lt;a href=&#34;http://dostibacode.ir/android&#34;&gt;ویدئوی کمپین دوستی با کد&lt;/a&gt;
یا &lt;a href=&#34;https://cloudrail.com/best-resources-to-learn-android-programming/&#34;&gt;این مطلب&lt;/a&gt; که به زبان انگلیسی نوشته شده استفاده کنید.&lt;/p&gt;

&lt;/div&gt;


&lt;p&gt;جدی‌ترین معضل من در اوایل ورود به حوزه برنامه‌نویسی و طراحی‌ نرم‌افزار پیدا کردن منابع مناسب برای یادگیری یک تکنولوژی یا زبان جدید بود به طوری که برای یادگیری هر چیزی، ساعت‌های زیادی رو صرف جستجو در اینترنت می‌کردم تا بتونم منبع مناسبی رو برای یادگیری اون تکنولوژی پیدا کنم. این روش به من کمک می‌کرد که تا علاوه بر یادگیری اون مبحث خاص بتونم بر خیلی از موارد مرتبط هم اشراف کلی پیدا کنم و در آینده اون ها رو به کار بگیرم اما این روش یادگیری مشکلات خاص خودش رو هم داره. در واقع من برای یادگیری سطحی مجموعه‌ای از مباحث که شاید ارتباط چندانی هم با مبحث مورد نظرم شما نداشتن و بعضا هیچ‌وقت به کارم نیامدند، سه تا چهار برابر زمان لازم برای یادگیری مبحث اصلی رو اختصاص می‌دادم.&lt;/p&gt;

&lt;p&gt;شاید این روش برای من که اون زمان دانش‌آموز بودم و مهم‌ترین مشغولیت ذهنیم خوندن درس‌های مدرسه بود مفید بوده باشه اما برای فردی که دانشجو شده یا بعد از فارغ‌التحصیل شدن از دانشگاه قصد داره با یادگیری یک تکنولوژی خاص موقعیت شغلی مناسبی رو برای خودش فراهم کنه قطعا مثل سم می‌مونه، چون فشار حاصل از کند شدن پروسه یادگیری می‌تونه اون فرد رو به طور کامل از یادگیری اون مبحث منصرف کنه. پس بهتره برای یادگیری هر چیزی بهترین منابع رو انتخاب کنید. در حقیقت همون‌طوری که &lt;a href=&#34;http://blog.alireza.es/5/my-web-development-environment/&#34;&gt;ابزارهای مناسب&lt;/a&gt; به شما کمک می‌کنه که کارتون رو با سرعت و کیفیت بهتری انجام بدید، استفاده از منابع و روش مناسب هم می‌تونه زمان یادگیری شما رو به حداقل برسونه.&lt;/p&gt;

&lt;p&gt;چند روز پیش که مشغول &lt;a href=&#34;https://twitter.com/alireza94&#34;&gt;توییت کردن&lt;/a&gt; در مورد مباحث کاریم بودم، یکی از دوستان دایرکت داد و درخواست کرد که بهش منابعی رو برای یادگیری برنامه‌نویسی اندروید معرفی کنم. منم تصمیم گرفتم منابعی رو که طی چند ماه گذشته به کارآموزهای &lt;a href=&#34;http://www.gandom.co&#34;&gt;گندم&lt;/a&gt; معرفی کرده بودم رو به صورت یک پست بنویسم و به صورت عمومی منتشر کنم. امیدوارم در صورتی که قصد شروع برنامه‌نویسی اندروید رو دارید این مطلب بهتون کمک بکنه.&lt;/p&gt;

&lt;p&gt;از نظر من روشی که در ادامه توضیح میدم یکی از عملی‌ترین و در عین حال ساده‌ترین راهکاری یادگیری برنامه‌نویسی اندروید هستش.&lt;/p&gt;

&lt;p&gt;برای شروع برنامه‌نویسی اندروید شما باید با ساختار و تکنیک‌های اولیه برنامه‌نویسی جاوا آشنا باشید. در صورتی که با جاوا آشنایی ندارید، می‌تونید سری مطالب فوق‌العاده &lt;a href=&#34;http://code.tutsplus.com/series/learn-java-for-android-development--mobile-22888&#34;&gt;یادگیری جاوا برای توسعه اندروید&lt;/a&gt; رو مطالعه کنید. تو این مجموعه مطالب که حدود 13 قسمت میشه با فرض آشنایی کلی شما با اصول برنامه‌نویسی سعی شده تا از مباحث اولیه جاوا تا مباحث نسبتا پیشرفته معرفی بشه. جدا پیشنهاد می‌کنم که اگه برنامه‌نویسی جاوا رو به صورت حرفه‌ای بلد نیستید در خوندن این مطالب تعلل نکنید.
بعد از یادگیری اولیه جاوا، باید سراغ مطلب &lt;a href=&#34;http://raghavendra-androidapps.blogspot.com/2011/07/basic-concepts-of-android.html&#34;&gt;مفاهیم پایه‌ای اندروید&lt;/a&gt; برید. این مطلب توی چند پارگراف به شما اصطلاحات کلی اندروید رو معرفی می‌کنه. اگه حوصله‌اش رو دارید، &lt;a href=&#34;http://developer.android.com/guide/components/fundamentals.html&#34;&gt;مستندات اندروید&lt;/a&gt; هم توضیحات خیلی کاملی برای معرفی مفاهیم واصطلاحات اندروید داده.&lt;/p&gt;

&lt;p&gt;خب تا اینجا صرفا مجموعه‌ای از مطالب تئوری رو خوندید، حالا وقت اینه که یه مقدار وارد فاز عملیاتی بشید، پس برید به این &lt;a href=&#34;http://androidcode.ir/post/install-package-android-SDK-platform&#34;&gt;آموزشی فارسی&lt;/a&gt; و یا این &lt;a href=&#34;http://www.androidcentral.com/installing-android-sdk-windows-mac-and-linux-tutorial&#34;&gt;آموزش انگلیسی&lt;/a&gt; و اندروید SDK رو نصب کنید. اندروید SDK در واقع مجموعه ابزارهای گوگل برای توسعه نرم‌افزاری های اندرویدی است که شامل منابع آموزشی، مستندات، کتابخانه‌های نرم‌افزاری، ابزارهای عیب‌یابی و انتشار نرم‌افزار میشه. علاوه بر این موارد اندروید SDK به شما یک ماشین مجازی برای اجرا کدهای اندرویدتون میده که به علل مختلف پیشنهاد می‌کنم ازش استفاده نکنید و در ادامه بهتون راهکارهای جایگزینش رو معرفی خواهم کرد(تا قبل از رسیدن به اون بخش می‌تونید اپ‌های نمونه‌ای که می‌نویسید رو توی گوشیتون اجرا کنید). در واقع اندروید SDK پیش‌نیاز شما برای برنامه‌نویسی و تولید نرم‌افزارهای اندرویدیه.&lt;/p&gt;

&lt;p&gt;حالا پیش‌نیازهای شروع برنامه‌نویسی اندروید رو در اختیار دارید پس باید شروع کنید به یادگیری عملی اندروید. پیشنهاد من برای این مرحله دیدن &lt;a href=&#34;http://www.lynda.com/Android-tutorials/Android-SDK-Essential-Training/143102-2.html&#34;&gt;ویدئوهای آموزشی لیندا&lt;/a&gt; است که می‌تونید اون ها رو از سایت تولید کننده بخرید و یا اگه نمی‌تونید و یا نمی‌خواین که بخرید با یه جستجوی ساده توی وب‌سایت‌های فارسی پیدا و دانلودش کنید. این سری ویدئو از مفاهیم اولیه برنامه‌نویسی اندروید مثل نصب اندروید SDK شروع می‌کنه و به تدریج حجم زیادی از تکنیک‌های کلیدی مثل ایجاد کردن چند صفحه در اپ، کار کردن با دیتا،پیاده‌سازی المان‌های رابط کاربری و &amp;hellip; رو آموزش میده. اکیدا توصیه می‌کنم که به دیدن ویدئوها اکتفا نکنید و سعی‌ کنید تمام کدهای زده شده توی ویدئوها رو یکبار خودتون بزنید.&lt;/p&gt;

&lt;p&gt;بعد از این دیدن این سری ویدئوها شما می‌تونید یک اپ ساده شبیه اکثر اپ‌های موجود در بازار اندروید رو تولید کنید. پیشنهاد می‌کنم در این مرحله و قبل از ورود به مرحله بعدی اپی بنویسید که توش از تمام مواردی که یاد گرفتید و یا حداقل خوندید ولی یاد نگرفتید استفاده کنید(شاید نوشتن یک ماشین حساب ساده ایده خوبی باشه) تا به طور کامل به اون مباحث مسلط بشید(و البته پیشنهاد می‌کنم که توی بازار منتشرش نکنید :)).&lt;/p&gt;

&lt;p&gt;در صورتی که مواردی که تا اینجا ذکر شده رو انجام داده باشید آمادگی این رو دارید که  تکنیک‌های مربوط به برنامه‌نویسی نیمه‌ پیشرفته اندروید رو یاد بگیرید. در مرحله اول این بخش پیشنهاد می‌کنم که ماشین مجازی GenyMotion رو نصب کنید. ماشین‌ مجازی پیش‌فرض اندروید هنوز و حتی بعد بهبود از قابل توجه سرعت نسبت به نسخه‌های قدیمی، سرعت پایینی داره، به طوری که اکثر برنامه‌نویس‌ها ترجیح میدن تا از دیوایس‌هاشون برای تست نرم‌افزارها استفاده کنن(البته تست کردن روی دیوایس مزایای خاص خودش رو داره). اما از طرفی به علت کثرت دیوایس‌های اندرویدی شما نمی‌تونید به یک یا دو دیوایسی که در خونه یا محل کار دارید اکتفا کنید و مجبورید برای تست دیوایس‌های مختلف و ورژن‌های مختلف اندروید از سیستم‌های شبیه‌ساز و ماشین‌های مجازی استفاده کنید. جنی‌موشن با سرعت فوق‌العاده بالایی که داره بهتون کمک می‌کنه که کارایی شبیه‌ساز اندروید(AVD) رو در کنار سرعت بالا داشته باشید.&lt;/p&gt;

&lt;p&gt;در مرحله دوم سعی کنید روی یکی از کاربردی‌ترین مباحث موجود در ویدئوها تمرکز کنید، یعنی SQLite. این پایگاه داده به علت سبک بودن در حجم زیادی از سیستم‌های‌عامل و نرم‌افزارها مورد استفاده قرار می‌گیره و با توجه به اهمیت کارکردن با دیتاها، بهتره شما به طور کامل به اون مسلط باشید. مطلب &lt;a href=&#34;http://www.askyb.com/sqlite/learn-sqlite-in-1-hour/&#34;&gt;آموزش Sqlite در یک ساعت&lt;/a&gt; خیلی می‌تونه بهتون کمک کنه و اگه حوصله داشته باشید این &lt;a href=&#34;http://sql.learncodethehardway.org/book/&#34;&gt;کتاب مجانی&lt;/a&gt; هم خیلی بهتون کمک خواهد کرد.&lt;/p&gt;

&lt;p&gt;توی مرحله سوم سعی کنید بر روی مدیریت ارورها کار کنید، اکثر کاربرا نرم‌افزاری که توی اولین اجرا فورس کلوز بشه رو دوباره نصب نمی‌کنن پس باید اپتون تو تمام شرایط به کار خودش ادامه بده. این &lt;a href=&#34;http://trivedihardik.wordpress.com/2011/08/20/how-to-avoid-force-close-error-in-android/&#34;&gt;مطلب&lt;/a&gt; می‌تونه به شما توی این بخش کمک کنه، همچنین در صورتی که سرویس گوگل آنالایتیکز رو بر روی اپتون راه‌ندازی کنید می‌تونید به اطلاعات مناسبی از نحوه تعامل کاربرها با اپتون، زمان و نحوه کرش‌کردن‌های اپ و خیلی از اطلاعات جالب دیگه دست پیدا کنید و ارورهای احتمالی رو در کوتاه‌ترین زمان رفع کنید. &lt;a href=&#34;https://developers.google.com/analytics/devguides/collection/android/v4/&#34;&gt;راهنمای گوگل&lt;/a&gt; بهترین راهنما برای اضافه کردن گوگل آنلایتیکز به اپتون هستش.&lt;/p&gt;

&lt;p&gt;مرحله چهارم شروع کار با سرویس‌های پس‌زمینه(Background services) است. بک‌گراند سرویسز یکی از پر کاربرد ترین موارد در سیستم‌های نسبتا پیشرفته هستن، پس خوندن &lt;a href=&#34;http://danielnadeau.blogspot.com/2013/10/android-services-tutorial-run-tasks-in.html&#34;&gt;این مطلب&lt;/a&gt; و &lt;a href=&#34;http://cogitolearning.co.uk/?p=780&#34;&gt;این مقایسه&lt;/a&gt; رو از دست ندید.
در محله پایانی که از نظر من مهم‌ترین مرحله است، شما باید سعی کنید تا از طریق اپتون با سرویس‌های تحت وب ارتباط برقرار کنید. پیش‌نیاز این مسئله شناخت پروتکل‌های ارتباطی وب‌ هستش پس مطلب شماره &lt;a href=&#34;http://code.tutsplus.com/tutorials/http-the-protocol-every-web-developer-must-know-part-1--net-31177&#34;&gt;یک&lt;/a&gt; و &lt;a href=&#34;http://code.tutsplus.com/tutorials/http-the-protocol-every-web-developer-must-know-part-2--net-31155&#34;&gt;دو&lt;/a&gt; رو از سری مطالب آموزش پروتکل HTTP بخونید. حالا که با استانداردها و قواعد آشنا شدید می‌تونید برید سراغ استفاده از کتابخانه‌ها و امکاناات اندروید برای ارتباط با وب. در مطلب &lt;a href=&#34;http://www.raywenderlich.com/56107/make-first-android-app-part-1&#34;&gt;آموزش پیاده‌سازی برنامه آب و هوا&lt;/a&gt; سعی شده تا یک برنامه ساده که با وب ارتباط برقرار می‌کنه طراحی بشه. در &lt;a href=&#34;http://hmkcode.com/android-parsing-json-data/&#34;&gt;این مطلب&lt;/a&gt;  هم سعی شده تا کار با وب‌سرویس‌هایی که جواب رو به صورت JSON برمی‌گردونن آموزش داده بشه. بعد از این مرحله می‌تونید پا رو یک قدم جلوتر بذارید و برید سراغ این که وب‌سرویس رو هم خودتون طراحی کنید. &lt;a href=&#34;http://www.androidhive.info/2014/01/how-to-create-rest-api-for-android-app-using-php-slim-and-mysql-day-23/&#34;&gt;این مطلب&lt;/a&gt; یک نمونه خوب از این پروسه است(البته پیشنهاد من اینه که طراحی وب‌سرویس رو به افرادی که در حوزه وب تخصص دارن واگذار کنید). مرحله بعدی می‌تونه دیدن این &lt;a href=&#34;https://developers.google.com/events/io/2012/sessions/gooio2012/121/&#34;&gt;ویدئو گوگل IO&lt;/a&gt; باشه که خیلی از موارد ارتباط با وب سرویس ها رو پوشش داده. در نهایت می‌تونید بر روی سینک کردن اطلاعات وب‌سرور و اپتون کار کنید، &lt;a href=&#34;http://chariotsolutions.com/blog/post/android-data-sync/&#34;&gt;این مطلب&lt;/a&gt; و &lt;a href=&#34;http://udinic.wordpress.com/2013/07/24/write-your-own-android-sync-adapter/&#34;&gt;این مطلب&lt;/a&gt; نمونه‌های خوبی از این مورد هستند.&lt;/p&gt;

&lt;p&gt;در این مطلب من سعی کردم کلیات مواردی که بیشترین کاربرد در اندروید رو دارن معرفی کنم، یقینا در صورتی که به صورت جدی وارد حوزه برنامه اندروید شوید به حجم اطلاعاتی خیلی بیشتری از موارد بالا نیاز پیدا خواهید کرد با این وجود امیدوارم تونسته باشم به شما کمکی بکنم و به عنوان آخرین پیشنهاد، برای این که یاد بگیرید، سعی کنید پیچیده‌ترین پروژه‌هایی که به ذهنتون می‌رسه رو انجام بدید و در پروسه انجام پروژه تکنیک‌های حرفه‌ای رو راه بگیرید که بهترین روش برای یادگیریه.
در نهایت اگه حال و حوصله خوندن این موارد رو ندارید و به قول معروف دیر اومدید و زود هم می‌خواین برین می‌تونید شماره &lt;a href=&#34;http://imohamad.me/blog/1393/06/05/building-a-simple-application-for-android-part1/&#34;&gt;یک&lt;/a&gt; و &lt;a href=&#34;http://imohamad.me/blog/1393/06/08/building-a-simple-application-for-android-part2/&#34;&gt;دو&lt;/a&gt; آموزش ساده و کاربردی برنامه‌نویسی اندرویدی که محمدرضا دیلمی نوشته رو بخونید، به مراتب نگارش بهتری از من داره.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>ابزارهایی که من برای توسعه وب استفاده می کنم</title>
      <link>https://alireza.es/post/webdevelopment-toolchain/</link>
      <pubDate>Tue, 08 Jul 2014 15:17:00 +0430</pubDate>
      
      <guid>https://alireza.es/post/webdevelopment-toolchain/</guid>
      <description>

&lt;div class=&#34;highlight-box highlight-box-green&#34;&gt;
	&lt;h6&gt;توضیحات&lt;/h6&gt;
	&lt;p&gt;این مطلب برای اولین بار در سال ۹۳ نوشته شد و در آبان‌ماه سال ۹۵ بازنویسی شده. بخش‌هایی از مطلب که خط خورده هستند در واقع مواردی هستند که
دو سال پیش توسط من برای توسعه وب مورد استفاده قرار می‌گرفتند ولی در حال حاضر دیگه به کار گرفته نمی‌شوند&lt;/p&gt;

&lt;/div&gt;


&lt;p&gt;فرض کنید قصد دارید در یه بطری نوشابه رو باز کنید(منظورم بطری‌های شیشه‌ای با در فلزی هستش). برای باز کردنش قطعا راه‌حل‌های مختلفی دارید، می‌تونید با با قاشق درش رو باز کنید، می‌تونید برای باز کردنش برید سراغ &lt;a href=&#34;http://baghbagho.com/open-coke-with-car-door/&#34;&gt;در ماشین&lt;/a&gt;  یا حتی مثل مغازه ساندویچی توی اختیاریه، با لبه‌ی یخچالتون بازش کنید. هر کدام از روش‌های ذکر شده شما رو به نتیجه مورد نظرتون خواهند رسوند ولی فکر می‌کنم اکثریت افراد اتفاق نظر دارند که منطقی ترین روش استفاده از دربازکن هستش.
برای توسعه وب هم می‌تونید از ابزارهای مختلفی استفاده کنید، مثلا ساده ترین راه اینه که نرم‌افزار نوت‌پد رو توی ویندوز باز کنید و شروع کنید توش کد بزنید، به طور قطع شما می‌تونید با همون نوت‌پد یه سایت کامل رو ایجاد کنید، اما انرژی تلف شده شما برای انجام این کار به حدی زیاد خواهد بود که بعد از تموم شدن اون سایت، کلا با بحث طراحی و توسعه‌وب خداحافظی می‌کنید. در واقع برای انجام هر کاری، استفاده از ابزار مناسب می‌تونه کار شما رو راحت‌تر کنه و انتخاب اشتباه ابزارها هم می‌تونه باعث نابودی انرژی و وقت شما بشه. من طی چند سال اخیر که مشغول توسعه‌وب بودم، ابزارهای مختلفی رو استفاده کردم در نهایت بعد از یک مدت زمان طولانی آزمون و خطا، تقریبا یکی دو سالی میشه که از مجموعه ثابتی از ابزارها استفاده می‌کنم که در ادامه لیست اون‌ها رو خواهید دید. لازم به ذکر است که من این ابزارها رو بر روی مک استفاده می‌کنم ولی اکثرشون بر روی ویندوز و لینوکس هم قابل استفاده هستند.&lt;/p&gt;

&lt;h1 id=&#34;مرورگر&#34;&gt;مرورگر&lt;/h1&gt;

&lt;p&gt;لازم به ذکر نیست که زمانی که مشغول ایجاد کردن وب‌سایتی هستید، لازمه که حاصل کار خودتون رو توی مرورگرهای مختلفی تست کنید، برای همین من به طور معمول سافاری، فایرفاکس و اپرا رو روی دستگاهم دارم اما مرورگر اصلی که به طور روزانه ازش استفاده می‌کنم و تقریبا با روشن شدن کامپیوتر باز میشه و با خاموش شدنش بسته میشه، نسخه استیبل کروم هست. کروم علاوه بر سرعت بالای اجرای کدها و پشتیبانی از رنج وسیعی از استانداردهای وب، مجموعه بی‌نظیری از اکستنشن(افزونه؟)ها رو داره و علاوه بر این‌ها، دولوپر تولز فوق‌العاده‌ای داره که من به شدت به کار کردن باهاش عادت کردم.
علاوه بر این من روی موبایل هم از کروم استفاده می‌کنم و دولوپر تولز کروم + ADB سیستم فوق‌العاده‌ای رو برای تست وب‌سابت روی موبایل فراهم می‌کنه، سعی می‌کنم در آینده در مورد &lt;a href=&#34;https://developer.chrome.com/devtools/docs/remote-debugging&#34;&gt;ریموت دیباگینگ&lt;/a&gt; یه مطلب بنویسم، بحث مفصلی هستش و اینجا جای توضیح دادنش نیست.&lt;/p&gt;

&lt;h2 id=&#34;اپ-های-کروم&#34;&gt;اپ‌های کروم&lt;/h2&gt;

&lt;p&gt;در حال حاضر و برخلاف دو سال پیش، من از هیچ یک از اپلیکیشن‌های کروم به طور مداوم استفاده نمی‌کنم.&lt;/p&gt;

&lt;p&gt;&lt;del&gt;اپ‌های کروم به خصوص بعد از &lt;a href=&#34;http://lifehacker.com/new-chrome-apps-run-on-your-desktop-offline-and-outsid-1258080268&#34;&gt;مستقل&lt;/a&gt; شدنون خیلی کاربردی شدند، من مجموعه زیادی از اپ‌های کروم رو استفاده می‌کنم ولی مواردی که برای توسعه‌وب کاربرد دارند محدود هستند به این موارد:&lt;/del&gt;&lt;/p&gt;

&lt;p&gt;&lt;del&gt;&lt;a href=&#34;https://chrome.google.com/webstore/detail/postman-rest-client-packa/fhbjgbiflinjbdggehcddcbncdddomop&#34;&gt;Postman&lt;/a&gt; : شاید بهترین ابزار برای تست رست‌سرویس‌ها باشه، پست‌من تونسته برای من به طور کامل جای curl رو بگیره و تبدیل به ابزاری شده که من به طور روزانه ازش استفاده می‌کنم.&lt;/del&gt;&lt;/p&gt;

&lt;p&gt;&lt;del&gt;&lt;a href=&#34;https://chrome.google.com/webstore/detail/pnhechapfaindjhompbnflcldabbghjo&#34;&gt;Secure Shell&lt;/a&gt; : در پروسه توسعه‌وب، یکی از واجبات ارتباطات ssh هستش که توی سیستم‌های مبتنی بر یونیکس، میتونید به طور مستقیم از طریق کامندلاین انجام بدید اما روی ویندوز همه چیز به این سادگی پیش نمی‌ره. تا نزدیک به 1 سال پیش من از putty استفاده می‌کردم اما الان این اپ جایگزین پوتی برای من شده و مهم ترین نکته‌اش اینه که به عنوان یه تب توی مرورگر اجرا میشه&lt;/del&gt;&lt;/p&gt;

&lt;p&gt;&lt;del&gt;&lt;a href=&#34;https://chrome.google.com/webstore/detail/gefgglgjdlddcpcapigheknbacbmmggp&#34;&gt;Chroma&lt;/a&gt; : اپی که می‌تونه واقعا توی مرحله انتخاب رنگ بهتون کمک کنه، اینترفیس خیلی ساده‌ای داره و بهتون کد رنگ رو با فرمت‌های مختلفی میده، در واقع این اپ مدت‌هاست جایگزین اپ پولی Color Schemer Studio برای من شده و مقداری از عذاب وجدان من رو به خاطر استفاده از کرک‌ها کم کرده.&lt;/del&gt;&lt;/p&gt;

&lt;h1 id=&#34;ابزارهای-کامندلاین&#34;&gt;ابزارهای کامندلاین&lt;/h1&gt;

&lt;p&gt;من همیشه عاشق کامندلاین بودم. در حال حاضر من از شل &lt;a href=&#34;http://www.zsh.org/&#34;&gt;ZSH&lt;/a&gt; بر روی اپلیکیشن &lt;a href=&#34;https://www.iterm2.com&#34;&gt;iTerm2&lt;/a&gt; استفاده می‌کنم.
ترکیبی &lt;a href=&#34;https://github.com/robbyrussell/oh-my-zsh&#34;&gt;Oh My Zsh&lt;/a&gt; و &lt;a href=&#34;https://gist.github.com/alireza-ahmadi/d7d6c04d9801c89dfe33ed8d29323c3e&#34;&gt;مجموعه‌ای از پلاگین‌های و یک prompt اختصاصی&lt;/a&gt;
تغییراتی هستند که استفاده از &lt;code&gt;zsh&lt;/code&gt; رو برای من ساده‌تر می کنند.&lt;/p&gt;

&lt;p&gt;برای مدیریت اپلیکیشن‌های کامندلاین، &lt;a href=&#34;http://brew.sh/&#34;&gt;brew&lt;/a&gt; انتخاب اصلی منه. موارد زیر محبوب‌ترین اپلیکیشن‌های کامندلاین برای من هستند:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;yarn&lt;/code&gt;: با وجود مدت زمان کوتاهی که از معرفی این پکیج منیجر گذشته، به خاطر سرعت و امنیت بالاتر تقریبا تونسته جای &lt;code&gt;npm&lt;/code&gt; رو برای مدیریت پکیج‌های جاوا اسکریپتی روی دستگاه من بگیره.&lt;/p&gt;

&lt;p&gt;‍&lt;code&gt;git&lt;/code&gt;: من، مثل اکثریت قریب به اتفاق دیگر توسعه‌دهنده‌ها، از گیت برای مدیریت نسخه‌های کدی که روشون کار می‌کنم استفاده می‌کنم، در حقیقت گیت محبوب‌ترین اپلیکیشن کامندلاین از نظر منه. برای این که
تجربه بهتری از استفاده گیت داشته باشید می‌تونید مثل من &lt;a href=&#34;https://github.com/tj/git-extras&#34;&gt;Git Extras&lt;/a&gt; رو هم روی دستگاه‌تون نصب کنید.&lt;/p&gt;

&lt;p&gt;‍‍&lt;code&gt;vim&lt;/code&gt;: توی چندماه گذشته سعی کردم که از ویم به عنوان ادیتور پیش‌فرضم استفاده کنم ولی به دلایل مختلف کنارش گذاشتم، در حال حاضر مثل چند سال گذشته این
ادیتور، ادیتور محبوب من برای ویرایش‌های ساده است.&lt;/p&gt;

&lt;p&gt;در صورتی که تمایل دارید می‌تونید لیست کامل اپلیکیشن‌هایی کامندلاینی که روی دستگاه من نصب هست رو از &lt;a href=&#34;https://gist.github.com/alireza-ahmadi/a2799c8e9512b785402078c7a9b6eae6&#34;&gt;اینجا&lt;/a&gt; ببینید.&lt;/p&gt;

&lt;p&gt;&lt;del&gt;ولی مواردی که مشترکه و من واقعا ازشون استفاده می‌کنم رو لیست می‌کنم، من به طور عمده از &lt;a href=&#34;http://git-scm.com/&#34;&gt;گیت&lt;/a&gt; برای مدیریت و بک‌آپ گرفتن از کدها، &lt;a href=&#34;http://npmjs.org&#34;&gt;NPM&lt;/a&gt; و یک سری از ماژول‌های کاربردیش، مثل &lt;a href=&#34;http://npmjs.org/package/node-static&#34;&gt;Static&lt;/a&gt; برای ایجاد یه فایل سرور ساده، &lt;a href=&#34;https://www.npmjs.org/package/grunt&#34;&gt;Grunt&lt;/a&gt; و &lt;a href=&#34;https://www.npmjs.org/package/gulp&#34;&gt;Gulp&lt;/a&gt; برای اتوماتیک کردن یه سری تسک‌های تکراری استفاده می‌کنم.&lt;/del&gt;&lt;/p&gt;

&lt;h1 id=&#34;ادیتورها&#34;&gt;ادیتورها&lt;/h1&gt;

&lt;p&gt;بخش زیادی از کار یک توسعه‌دهنده وب به کد زدن می‌گذره در نتیجه شاید این بخش مهم‌ترین بخش مطلب باشه، من بعد از مدت زمان طولانی تست کردن ادیتورهای ساده و IDE های پیشرفته، به این نتیجه رسیدم که برای ادیت‌های کوچک و خواندن کد از ادیتورهای &lt;del&gt;خیلی&lt;/del&gt; نسبتا ساده استفاده کنم.&lt;/p&gt;

&lt;p&gt;&lt;del&gt;&lt;a href=&#34;http://notepad-plus-plus.org/&#34;&gt;Notepad++&lt;/a&gt; ادیتوری هستش که من هر روز برای خوندن کدهای پروژه‌های که مشغول کار روشون نیستم و یا ادیت‌های ساده ازش استفاده می‌کنم. به جای نوت‌پد++ میشه از ادیتورهای مثل &lt;a href=&#34;http://www.sublimetext.com/&#34;&gt;Sublime text&lt;/a&gt; یا حتی Vim استفاده کرد و به نظرم به سلیقه شخصی بر می‌گرده.
اما زمانی که قصد دارید روی پروژه‌های بزرگ کار کنید، ادیتورها نمی‌تونن تمام نیازها رو برطرف کنن، من مدتی با &lt;a href=&#34;http://komodoide.com/komodo-edit/&#34;&gt;Komodo Edit&lt;/a&gt; و مدتی هم با &lt;a href=&#34;http://www.visualstudio.com/&#34;&gt;Visual Studio&lt;/a&gt; کار کردم، با وجود این که ویژوال استودیو یه محیط فوق‌العاده برای کد زدن بود ولی هنوز نمی‌تونست نیازهای من رو برطرف کنه در نتیجه من رفتم سراغ محصولات کمپانی &lt;a href=&#34;http://www.jetbrains.com/&#34;&gt;JetBrains&lt;/a&gt;. محصولات این شرکت از بیس مشترکی برخوردار هستند و شما می‌تونید برای هر زبانی که کار می‌کنید از محصول مخصوص اون زبان برنامه‌نویسی استفاده کنید. من از Webstorm برای کار روی پروژه‌های فرانت‌اند و بک‌اند مبتنی بر جاوا اسکریپت، از PHPStorm برای کار روی پروژه‌های وردپرسی و به صورت کلی پروژه‌هایی که براساس PHP پیاده شدند استفاده می‌کنم. وب‌استورم علاوه بر امکانات یه IDE عادی هماهنگی قابل قبولی با گیت داره، کامندلاین رو به صورت توکار داره و از همه مهم‌تر تسک‌های گرانت رو میشناسه و امکان اجرا کردن اون‌ها رو از طریق خود نرم‌افزار میده.&lt;/del&gt;&lt;/p&gt;

&lt;p&gt;بعد از معرفی &lt;a href=&#34;http://code.visualstudio.com/&#34;&gt;Visual Studio Code&lt;/a&gt; توسط مایکروسافت، این ادیتور آروم‌آروم جای تمام ادیتورهای دیگه رو برای من گرفته. سادگی، سرعت قابل قبول، وجود ابزارهای سرچ و دیباگ قدرتمند ، طیف گسترده‌ای از اکستنشن‌ها و هماهنگی کامل با گیت باعث شده که من تقریبا استفاده از تمام ادیتورهای دیگه رو کنار بذارم. با این وجود هنوز هم گاهی اوقات از PHPStorm برای کارکردن روی کدهای PHP و intellij idea برای کارکردن روی کدهای الکسیر(که جدیدا دارم سعی می‌کنم استفاده کردن ازش رو یاد بگیرم) استفاده می‌کنم.&lt;/p&gt;

&lt;h1 id=&#34;موارد-دیگر&#34;&gt;موارد دیگر&lt;/h1&gt;

&lt;p&gt;اگر بنا بر شمردن ابزارها باشد، می‌توان لیست طویلی از نرم‌افزارها رو آماده کرد، با این وجود من به معرفی موارد فوق اکتفا می‌کنم و در پایان به صورت خلاصه برخی ابزارهای دیگری که استفاده می‌کنم رو می‌‌آرم.&lt;/p&gt;

&lt;p&gt;&lt;del&gt;Fiddler2 : سیستم پراکسی ساده که امکان بررسی پکت‌های ارسالی و دریافتی رو میده&lt;/del&gt;&lt;/p&gt;

&lt;p&gt;&lt;del&gt;XAMPP : مجموع نرم‌افزارهای لازم برای اجرا کد‌های PHP که با وجود این که در حال حاضر نسبت به قبل خیلی کم ازش استفاده می‌کنم، همچنان یکی از محبوب ترین ابزارهای منه&lt;/del&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://1password.com/&#34;&gt;1Password&lt;/a&gt; : پسورد منیجر ساده و امنی که به من کمک می‌کنه تمام پسوردهام رو یکسان نذارم.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://www.getpostman.com&#34;&gt;Postman&lt;/a&gt; : ابزار پیشنهادی من برای تست‌کردن وبAPI ها.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://www.spotify.com/us/&#34;&gt;Spotify&lt;/a&gt; و &lt;a href=&#34;http://noiz.io/&#34;&gt;Noizio&lt;/a&gt; : برای این که در حین کار صداهای بیرونی رو نشنوم.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://www.docker.com/products/docker&#34;&gt;Docker&lt;/a&gt; : من از داکر برای توسعه و دیپلویمنت استفاده می‌کنم، درصورتی که با داکر آشنا نیستید &lt;a href=&#34;https://www.docker.com/what-docker&#34;&gt;این مطلب&lt;/a&gt; رو بخونید.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://airmailapp.com/&#34;&gt;Airmail&lt;/a&gt; : ابزار ساده و قدرتمندی برای مدیریت ایمیل‌ها.&lt;/p&gt;

&lt;p&gt;علاوه بر موارد فوق من از &lt;a href=&#34;http://evernote.com/&#34;&gt;Evernote&lt;/a&gt; برای مدیریت یادداشت‌ها و از &lt;a href=&#34;https://todoist.com/&#34;&gt;Todoist&lt;/a&gt; برای مدیریت تسک‌ها استفاده می‌کنم، گرچه دارم سعی می‌کنم به دلایل متعددی
هر دو مورد رو با یادداشت‌های دست‌نویس جایگزین کنم.&lt;/p&gt;

&lt;p&gt;امیدوارم این مطلب براتون مفید بوده باشه.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>درباره‌من</title>
      <link>https://alireza.es/page/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://alireza.es/page/about/</guid>
      <description>&lt;p&gt;من علیرضا احمدی هستم، یک توسعه‌دهنده نرم‌افزار که به برنامه‌نویسی، اقتصاد، سیاست و غذا عشق می‌ورزه. به صورت کلی آرامش رو به هیاهو، سکوت رو به صحبت‌کردن، تنهایی رو به بودن در جمع، برد رو به باخت، ریسک رو به احتیاط، صبر رو به عجله، تغییر رو به سکون، مطالعه رو به رفتن‌به‌پارک، تایپ‌کردن رو به نوشتن‌با‌ خودکار، چت‌متنی رو به تماس‌تلفنی، موسیقی‌سنتی رو به موسیقی‌مدرن، سادگی رو به پیچیدگی، برج رو به خونه‌باغ، مرکز‌شهر رو به حومه‌شهر، حومه‌شهر رو به روستا، ببر رو به خرگوش، برنامه‌نویسی وب رو به برنامه‌نویسی موبایل، توسعه بک‌اند رو به فرانت‌اند، توییتر رو به فیس‌بوک، اتم رو به سابلایم، فدورا رو به اوبونتو، گنوم رو به KDE، گالپ رو به گرانت، چلسی رو به بارسلونا، موکا رو به امریکانو، ترشی رو به شیرینی و آینده رو به گذشته ترجیح میدم.&lt;/p&gt;

&lt;p&gt;برنامه‌نویسی رو از حدود ۱۰ سال پیش و با VB.NET شروع کردم، توی چند ماه از برنامه‌نویسی دسکتاپ به سمت وب رفتم و از اون زمان تا به حال اصلی‌ترین حوزه‌ی فعالیتم وب بوده. توی پنج سال اخیر و بعد از اتمام دبیرستان، علاوه بر تحصیل در دانشگاه آزاد تهران شمال در رشته‌ای که بهش مهندسی نرم‌افزار گفته میشه توی چند تا شرکت توی موقعیت‌های شغلی مختلف من جمله فرانت‌اند دولوپر/ بک‌اند دولوپر/ مدیر توسعه اپلیکیشن‌های تلفن‌همراه و &amp;hellip; مشغول بودم، علاوه بر این به صورت موازی در گندم، که حدود دو سال پیش با دو نفر از بهترین دوستانم تاسیسش کردیم، فعالیت می‌کردم. در حال حاضر هم همراه دوستان داریم سعی می‌کنیم &lt;a href=&#34;https://www.miare.ir&#34;&gt;میاره&lt;/a&gt; رو هرچه بیشتر توسعه بدیم.&lt;/p&gt;

&lt;p&gt;خوشحال میشم که من رو در &lt;a href=&#34;https://twitter.com/alireza94&#34;&gt;توییتر&lt;/a&gt; فالو کنید. در صورتی که تمایل دارید در مورد حوزه فعالیت و سوابق کاری من بیشتر بدونید، بهترین روش مراجعه به پروفایل‌های &lt;a href=&#34;https://ir.linkedin.com/in/alirezaahmadi&#34;&gt;لینکداین&lt;/a&gt; یا &lt;a href=&#34;https://github.com/alireza-ahmadi/&#34;&gt;گیت‌هاب&lt;/a&gt; من هستش. در صورتی هم که به هر نحوی می تونستم بهتون کمکی بکنم یا پیشنهادی در مورد خودم و یا وبلاگم داشتید می‌تونید به راحتی به من &lt;a href=&#34;mailto:me@alireza.es&#34;&gt;ایمیل&lt;/a&gt; بزنید.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>